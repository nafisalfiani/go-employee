{
    "swagger": "2.0",
    "info": {
        "description": "API Collection for Employee Service",
        "title": "Employee Service",
        "contact": {
            "name": "Nafisa Alfiani",
            "email": "nafisa.alfiani.ica@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Will return hello message if the server is up",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello"
                ],
                "summary": "Check server status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "description": "This API will get all existing employee",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get all existing employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page count",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            },
            "post": {
                "description": "This API will create new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create new employee",
                "parameters": [
                    {
                        "description": "Employee Data",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            },
            "patch": {
                "description": "This API will update existing employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update existing employee",
                "parameters": [
                    {
                        "description": "Employee Data",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "This API will get existing employee with given id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get existing employee by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API will delete employee data with given id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete existing employee by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.HTTPResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Employee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "model.HTTPMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HTTPResp": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/model.HTTPMessage"
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "model.Pagination": {
            "type": "object",
            "properties": {
                "curent_page": {
                    "type": "integer"
                },
                "total_element": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        }
    }
}